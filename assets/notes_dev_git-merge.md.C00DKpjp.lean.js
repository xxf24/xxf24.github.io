import{_ as e,a as t,aa as r,o as i}from"./chunks/framework.D5y5L8WJ.js";const q=JSON.parse('{"title":"Git 分支合并","description":"","frontmatter":{"lastUpdateTime":"2024-11-28T01:13:48.000Z","date":"2023/7/31","title":"Git 分支合并","category":"开发","tags":["git"]},"headers":[],"relativePath":"notes/dev/git-merge.md","filePath":"notes/dev/git-merge.md"}'),h={name:"notes/dev/git-merge.md"};function o(l,a,n,s,d,c){return i(),t("div",null,a[0]||(a[0]=[r('<p>在多人协作开发中，如果使用 Git 作为版本管理工具，如何妥善解决合并时的冲突往往是一个绕不开的坎。</p><p>还记得自己最早从远程仓库拉取代码失败时，当时有意识到出现了冲突，但是并不知道如何解决，只好先拷贝一下本地的代码，然后将本地工作目录恢复成上次提交的状态，再重新拉取一下。</p><p>本文尝试整理一些分支合并时的细节问题和实践应用，便于自己后续回顾。</p><h2 id="一次成功的合并" tabindex="-1">一次成功的合并 <a class="header-anchor" href="#一次成功的合并" aria-label="Permalink to &quot;一次成功的合并&quot;">​</a></h2><h3 id="快进合并" tabindex="-1">快进合并 <a class="header-anchor" href="#快进合并" aria-label="Permalink to &quot;快进合并&quot;">​</a></h3><h3 id="三路合并" tabindex="-1">三路合并 <a class="header-anchor" href="#三路合并" aria-label="Permalink to &quot;三路合并&quot;">​</a></h3><h2 id="关于冲突" tabindex="-1">关于冲突 <a class="header-anchor" href="#关于冲突" aria-label="Permalink to &quot;关于冲突&quot;">​</a></h2><h3 id="冲突的表示方式" tabindex="-1">冲突的表示方式 <a class="header-anchor" href="#冲突的表示方式" aria-label="Permalink to &quot;冲突的表示方式&quot;">​</a></h3><h3 id="冲突的产生原因" tabindex="-1">冲突的产生原因 <a class="header-anchor" href="#冲突的产生原因" aria-label="Permalink to &quot;冲突的产生原因&quot;">​</a></h3><h3 id="冲突的解决思路" tabindex="-1">冲突的解决思路 <a class="header-anchor" href="#冲突的解决思路" aria-label="Permalink to &quot;冲突的解决思路&quot;">​</a></h3><h2 id="一些补充" tabindex="-1">一些补充 <a class="header-anchor" href="#一些补充" aria-label="Permalink to &quot;一些补充&quot;">​</a></h2><h3 id="合并失败的场景与应对" tabindex="-1">合并失败的场景与应对 <a class="header-anchor" href="#合并失败的场景与应对" aria-label="Permalink to &quot;合并失败的场景与应对&quot;">​</a></h3><h3 id="squash-选项" tabindex="-1">--squash 选项 <a class="header-anchor" href="#squash-选项" aria-label="Permalink to &quot;--squash 选项&quot;">​</a></h3><h3 id="cherry-pick-命令" tabindex="-1">cherry-pick 命令 <a class="header-anchor" href="#cherry-pick-命令" aria-label="Permalink to &quot;cherry-pick 命令&quot;">​</a></h3><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2>',15)]))}const m=e(h,[["render",o]]);export{q as __pageData,m as default};
