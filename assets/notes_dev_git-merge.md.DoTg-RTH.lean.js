import{_ as e,a as t,aa as r,o as i}from"./chunks/framework.D5y5L8WJ.js";const m=JSON.parse('{"title":"Git 分支合并","description":"","frontmatter":{"lastUpdateTime":"2024-11-26T07:22:30.000Z","date":"2023/7/31","title":"Git 分支合并","category":"开发","tags":["git"]},"headers":[],"relativePath":"notes/dev/git-merge.md","filePath":"notes/dev/git-merge.md"}'),o={name:"notes/dev/git-merge.md"};function h(l,a,s,n,d,c){return i(),t("div",null,a[0]||(a[0]=[r('<p>在多人协作的项目开发中，如果使用 git 作为版本管理工具，那么解决分支合并冲突往往是一个绕不开的坎。</p><p>最早在自己执行 git pull 或者 git push 失败时，其实就已经遇到分支合并冲突了，不过我当时并没有意识到。很长一段时间我都是使用 GitHub Desktop 的图形化界面去操作分支合并，对 merge 的具体原理并未深究，也从未使用过 rebase 命令，每次遇到分支合并冲突，解决起来都是提心吊胆的。</p><p>本文尝试整理一些分支合并时的细节问题和实践应用，以便今后能更从容地应对分支合并。</p><h2 id="快进合并" tabindex="-1">快进合并 <a class="header-anchor" href="#快进合并" aria-label="Permalink to &quot;快进合并&quot;">​</a></h2><h2 id="三路合并" tabindex="-1">三路合并 <a class="header-anchor" href="#三路合并" aria-label="Permalink to &quot;三路合并&quot;">​</a></h2><h2 id="策略选项" tabindex="-1">策略选项 <a class="header-anchor" href="#策略选项" aria-label="Permalink to &quot;策略选项&quot;">​</a></h2><h2 id="关于冲突" tabindex="-1">关于冲突 <a class="header-anchor" href="#关于冲突" aria-label="Permalink to &quot;关于冲突&quot;">​</a></h2><h3 id="冲突的表示" tabindex="-1">冲突的表示 <a class="header-anchor" href="#冲突的表示" aria-label="Permalink to &quot;冲突的表示&quot;">​</a></h3><h2 id="一些补充" tabindex="-1">一些补充 <a class="header-anchor" href="#一些补充" aria-label="Permalink to &quot;一些补充&quot;">​</a></h2><h3 id="合并失败的场景与应对" tabindex="-1">合并失败的场景与应对 <a class="header-anchor" href="#合并失败的场景与应对" aria-label="Permalink to &quot;合并失败的场景与应对&quot;">​</a></h3><h3 id="squash-选项" tabindex="-1">--squash 选项 <a class="header-anchor" href="#squash-选项" aria-label="Permalink to &quot;--squash 选项&quot;">​</a></h3><h3 id="cherry-pick" tabindex="-1">cherry-pick <a class="header-anchor" href="#cherry-pick" aria-label="Permalink to &quot;cherry-pick&quot;">​</a></h3><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E9%AB%98%E7%BA%A7%E5%90%88%E5%B9%B6" target="_blank" rel="noreferrer">高级合并 - 《Pro Git》</a></li></ul>',14)]))}const p=e(o,[["render",h]]);export{m as __pageData,p as default};
