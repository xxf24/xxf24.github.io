import{_ as t,a,aa as r,o}from"./chunks/framework.D5y5L8WJ.js";const u=JSON.parse('{"title":"Git 撤销操作","description":"","frontmatter":{"lastUpdateTime":"2024-11-26T01:09:41.000Z","date":"2023/4/6","title":"Git 撤销操作","category":"开发","tags":["git"]},"headers":[],"relativePath":"notes/dev/git-undo.md","filePath":"notes/dev/git-undo.md"}'),i={name:"notes/dev/git-undo.md"};function s(c,e,n,d,l,h){return o(),a("div",null,e[0]||(e[0]=[r('<p>在我刚接触 git 时，听到过这么一种说法：git 很强，只要文件被追踪，就不用担心出现丢失问题。</p><p>平时使用中，我确实感受到了 git 的强大, 但有时会面临一些使用困境。究其原因，一方面是相关的命令太多，自己想不起来怎么用，另一方面还是担心一顿操作后把历史提交给弄没了。</p><p>本文尝试归纳一些常见的撤销命令，以作备忘。</p><h2 id="reset-和-revert" tabindex="-1">reset 和 revert <a class="header-anchor" href="#reset-和-revert" aria-label="Permalink to &quot;reset 和 revert&quot;">​</a></h2><h2 id="clean-和-rm" tabindex="-1">clean 和 rm <a class="header-anchor" href="#clean-和-rm" aria-label="Permalink to &quot;clean 和 rm&quot;">​</a></h2><h2 id="checkout-和-restore" tabindex="-1">checkout 和 restore <a class="header-anchor" href="#checkout-和-restore" aria-label="Permalink to &quot;checkout 和 restore&quot;">​</a></h2><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><h2 id="情景模拟" tabindex="-1">情景模拟 <a class="header-anchor" href="#情景模拟" aria-label="Permalink to &quot;情景模拟&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">后记</p><p></p><p>我发现在日常使用中，将问题丢给 <code>ChatGPT</code> 或者 <code>new bing</code>，也能获得一些不错的解决方案，尤其是当自己毫无头绪的时候 🤔。</p></div>',9)]))}const m=t(i,[["render",s]]);export{u as __pageData,m as default};
